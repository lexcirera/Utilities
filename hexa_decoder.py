Hx=[['2','0'],['2','1'],['2','2'],['2','3'],['2','4'],['2','5'],['2','6'],['2','7'],['2','8'],['2','9'],['2','A'],['2','B'],['2','C'],['2','D'],['2','E'],['2','F'],['3','0'],['3','1'],['3','2'],['3','3'],['3','4'],['3','5'],['3','6'],['3','7'],['3','8'],['3','9'],['3','A'],['3','B'],['3','C'],['3','D'],['3','E'],['3','F'],['4','0'],['4','1'],['4','2'],['4','3'],['4','4'],['4','5'],['4','6'],['4','7'],['4','8'],['4','9'],['4','A'],['4','B'],['4','C'],['4','D'],['4','E'],['4','F'],['5','0'],['5','1'],['5','2'],['5','3'],['5','4'],['5','5'],['5','6'],['5','7'],['5','8'],['5','9'],['5','A'],['5','B'],['5','C'],['5','D'],['5','E'],['5','F'],['6','0'],['6','1'],['6','2'],['6','3'],['6','4'],['6','5'],['6','6'],['6','7'],['6','8'],['6','9'],['6','A'],['6','B'],['6','C'],['6','D'],['6','E'],['6','F'],['7','0'],['7','1'],['7','2'],['7','3'],['7','4'],['7','5'],['7','6'],['7','7'],['7','8'],['7','9'],['7','A'],['7','B'],['7','C'],['7','D'],['7','E'],['7','F'],]
Tx=[' ','!','"','#','$','%','&','"','(',')','*','+',',','-','.','/','0','1','2','3','4','5','6','7','8','9',':',';','<','=','>','?','@','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','[','Â¤',']','^','_','`','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','{','|','}','~','DEL']
def convHxtx(n):
    M=[]
    decode=[]
    a=""
    for i in range (int(len(n)/2)):
        L=[]
        L.append(n[2*i])
        L.append(n[2*i+1])
        M.append(L)
    for k in range (len(M)):
        for i in range (len(Hx)):
            if M[k]==Hx[i]:
                decode.append(Tx[i])
            else:
                decode=decode
    for k in range (len(decode)):
        a+=decode[k]
    return a


